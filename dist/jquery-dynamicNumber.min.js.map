{"version":3,"sources":["jquery-dynamicNumber.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryDynamicNumberEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","from","to","duration","decimals","format","n","options","toFixed","percentage","currency","indicator","size","separator","decimalsPoint","group","formaters","s","k","Math","pow","String","round","split","reg","RegExp","replace","Array","join","getTime","window","performance","now","Date","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","max","setTimeout","clearTimeout","dynamicNumber","element","arguments","undefined","$element","extend","data","step","parseFloat","first","attr","_requestId","initialized","_trigger","init","value","eventType","_len","params","_key","concat","trigger","NAMESPACE$1","onFunction","word","substring","toUpperCase","apply","_this","_clear","start","startTime","animation","time","distance","next","abs","_update","formated","isNaN","html","go","isPlainObject"],"mappings":";;;;;;;CAAA,SAAAA,EAAAC,GACA,GAAA,mBAAAC,QAAAA,OAAAC,IACAD,QAAA,UAAAD,QACA,GAAA,oBAAAG,QACAH,EAAAI,QAAA,eACA,CACA,IAAAC,GACAF,YAEAH,EAAAD,EAAAO,QACAP,EAAAQ,sBAAAF,EAAAF,SAVA,CAYAK,KAAA,SAAAC,GACA,aAYA,SAAAC,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,MAAA,IAAAC,UAAA,qCAZA,IAAAC,EAEA,SAAAC,GACA,OAAAA,GAAAA,EAAAC,WACAD,GAEAE,QAAAF,GANAG,CAAAT,GAgBAU,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CACA,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,IAAAA,EAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIA,OAAA,SAAAb,EAAAoB,EAAAC,GAGA,OAFAD,GAAAZ,EAAAR,EAAAsB,UAAAF,GACAC,GAAAb,EAAAR,EAAAqB,GACArB,GAdA,GAkBAuB,GACAC,KAAA,EACAC,GAAA,IACAC,SAAA,IACAC,SAAA,EACAC,OAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,QAAAD,EAAAH,WAEAK,YACAL,SAAA,GAEAM,UACAC,UAAA,IACAC,KAAA,EACAR,SAAA,IACAS,UAAA,IACAC,cAAA,KAEAC,OACAH,KAAA,EACAR,SAAA,IACAS,UAAA,IACAC,cAAA,MAIAE,GACAP,WAAA,SAAAH,EAAAC,GAGA,OAAAD,EAAAE,QAAAD,EAAAH,UAAA,KAEAM,SAAA,SAAAJ,EAAAC,GAGA,OAAAA,EAAAI,UAAAK,EAAAD,MAAAT,EAAAC,IAEAQ,MAAA,SAAAT,EAAAC,GAGA,IAAAH,EAAAG,EAAAH,SACAa,EAAA,GACA,GAAAb,EAAA,CACA,IAAAc,EAAAC,KAAAC,IAAA,GAAAhB,GACAa,EAAAI,OAAAF,KAAAG,MAAAhB,EAAAY,GAAAA,QAEAD,EAAAI,OAAAF,KAAAG,MAAAhB,IAIA,IAFAW,EAAAA,EAAAM,MAAA,MAEA,GAAAlC,OAAA,EAAA,CACA,IAAAmC,EAAA,IAAAC,OACA,gBAAAlB,EAAAK,KAAA,cACA,KAEAK,EAAA,GAAAA,EAAA,GAAAS,QAAAF,EAAAjB,EAAAM,WAMA,OAJAI,EAAA,IAAA,IAAA5B,OAAAe,IACAa,EAAA,GAAAA,EAAA,IAAA,GACAA,EAAA,IAAA,IAAAU,MAAAvB,EAAAa,EAAA,GAAA5B,OAAA,GAAAuC,KAAA,MAEAX,EAAAW,KAAArB,EAAAO,iBAIAe,EAAA,WAGA,OAAAC,OAAAC,YAAAC,IACAF,OAAAC,YAAAC,MAEAC,KAAAD,OAGAC,KAAAD,MACAC,KAAAD,IAAA,WAGA,OAAA,IAAAC,MAAAJ,YAMA,IAAA,IAFAK,GAAA,SAAA,OAEA9C,EAAA,EAAAA,EAAA8C,EAAA7C,SAAAyC,OAAAK,wBAAA/C,EAAA,CACA,IAAAgD,EAAAF,EAAA9C,GACA0C,OAAAK,sBAAAL,OAAAM,EAAA,yBACAN,OAAAO,qBACAP,OAAAM,EAAA,yBACAN,OAAAM,EAAA,+BAGA,GACA,uBAAAE,KAAAR,OAAAS,UAAAC,aACAV,OAAAK,wBACAL,OAAAO,qBACA,CACA,IAAAI,EAAA,EACAX,OAAAK,sBAAA,SAAAO,GAGA,IAAAV,EAAAC,KAAAD,MACAW,EAAAxB,KAAAyB,IAAAH,EAAA,GAAAT,GACA,OAAAa,WAAA,WACAH,EAAAD,EAAAE,IACAA,EAAAX,IAEAF,OAAAO,qBAAAS,aAGA,IAEAC,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAzC,EACA0C,UAAA5D,OAAA,QAAA6D,IAAAD,UAAA,GAAAA,UAAA,MAEA1E,EAAAF,KAAA0E,GAEA1E,KAAA2E,QAAAA,EACA3E,KAAA8E,UAAA,EAAAxE,EAAAG,SAAAkE,GAEA3E,KAAAkC,QAAA5B,EAAAG,QAAAsE,QACA,KAEApD,EACAO,EACAlC,KAAA8E,SAAAE,QAEAhF,KAAAkC,QAAA+C,KAAAC,WAAAlF,KAAAkC,QAAA+C,KAAA,IAEAjF,KAAAmF,MAAAnF,KAAA8E,SAAAM,KAAA,iBACApF,KAAAmF,MAAAnF,KAAAmF,MAAAnF,KAAAmF,MAAAnF,KAAAkC,QAAAN,KACA5B,KAAAmF,MAAAD,WAAAlF,KAAAmF,MAAA,IAEAnF,KAAA2D,IAAA3D,KAAAmF,MACAnF,KAAA6B,GAAAqD,WAAAlF,KAAAkC,QAAAL,GAAA,IAEA7B,KAAAqF,WAAA,KACArF,KAAAsF,aAAA,EACAtF,KAAAuF,SAAA,QACAvF,KAAAwF,OA2LA,OAxLA7E,EACA+D,IAGAnD,IAAA,OACAkE,MAAA,WACAzF,KAAAsF,aAAA,EACAtF,KAAAuF,SAAA,YAIAhE,IAAA,WACAkE,MAAA,SAAAC,GACA,IACA,IAAAC,EAAAf,UAAA5D,OACA4E,EAAAtC,MAAAqC,EAAA,EAAAA,EAAA,EAAA,GACAE,EAAA,EACAA,EAAAF,EACAE,IAEAD,EAAAC,EAAA,GAAAjB,UAAAiB,GAGA,IAAAb,GAAAhF,MAAA8F,OAAAF,GAEA5F,KAAA8E,SAAAiB,QAAAC,kBAAAN,EAAAV,GAOA,IAAAiB,EAAA,MAJAP,EAAAA,EAAArC,QAAA,WAAA,SAAA6C,GACA,OAAAA,EAAAC,UAAA,EAAA,GAAAC,cAAAF,EAAAC,UAAA,MAIA,mBAAAnG,KAAAkC,QAAA+D,IACAjG,KAAAkC,QAAA+D,GAAAI,MAAArG,KAAA4F,MAKArE,IAAA,KACAkE,MAAA,SAAA5D,GACA,IAAAyE,EAAAtG,KAEAA,KAAAuG,SAGA1E,OADA,IAAAA,EACA7B,KAAA6B,GAEAqD,WAAArD,EAAA,IAGA,IAAA2E,EAAAxG,KAAA2D,IACA8C,EAAAjD,IA+BAxD,KAAAqF,WAAA5B,OAAAK,sBA7BA,SAAA4C,EAAAC,GACA,IAAAC,GAAAD,EAAAF,GAAAH,EAAApE,QAAAJ,SACA+E,EAAA/D,KAAAgE,IAAAF,GAAAJ,EAAA3E,IAEAA,EAAA2E,GACAK,EAAAL,EAAAK,GACAhF,IACAgF,EAAAhF,IAGAgF,EAAAL,EAAAK,GACAhF,IACAgF,EAAAhF,GAIAyE,EAAAS,QAAAF,GAEAA,IAAAhF,GACA4B,OAAAO,qBAAAsC,EAAAjB,YACAiB,EAAAjB,WAAA,KACAiB,EAAA3C,MAAA2C,EAAAzE,IACAyE,EAAAf,SAAA,WAGAe,EAAAjB,WAAA5B,OAAAK,sBAAA4C,QAQAnF,IAAA,UACAkE,MAAA,SAAAxD,GACAjC,KAAA2D,IAAA1B,EAEAjC,KAAA8E,SAAAM,KAAA,gBAAApF,KAAA2D,KACA,IAAAqD,EAAA/E,EAEAgF,MAAAhF,KACA,mBAAAjC,KAAAkC,QAAAF,OACAgF,EAAAhH,KAAAkC,QAAAF,OAAAqE,MAAArG,MAAAiC,EAAAjC,KAAAkC,UACA,iBAAAlC,KAAAkC,QAAAF,cACA,IAAAW,EAAA3C,KAAAkC,QAAAF,QACAgF,EAAArE,EAAA3C,KAAAkC,QAAAF,QAAAqE,MAAArG,MACAiC,EACAjC,KAAAkC,QAAAlC,KAAAkC,QAAAF,UAEA,mBAAAyB,OAAAzD,KAAAkC,QAAAF,UACAgF,EAAAvD,OAAAzD,KAAAkC,QAAAF,QAAAqE,MAAArG,MACAiC,EACAjC,KAAAkC,aAMAlC,KAAA8E,SAAAoC,KAAAF,GACAhH,KAAAuF,SAAA,SAAAtD,MAIAV,IAAA,MACAkE,MAAA,WACA,OAAAzF,KAAA2D,OAIApC,IAAA,QACAkE,MAAA,WACAzF,KAAAuG,SACAvG,KAAAuF,SAAA,SACAvF,KAAAmH,GAAAnH,KAAA6B,OAIAN,IAAA,SACAkE,MAAA,WACAzF,KAAAqF,aACA5B,OAAAO,qBAAAhE,KAAAqF,YACArF,KAAAqF,WAAA,SAKA9D,IAAA,QACAkE,MAAA,WACAzF,KAAAuG,SACAvG,KAAA+G,QAAA/G,KAAAmF,OACAnF,KAAAuF,SAAA,YAIAhE,IAAA,OACAkE,MAAA,WACAzF,KAAAuG,SACAvG,KAAAuF,SAAA,WAIAhE,IAAA,SACAkE,MAAA,WACAzF,KAAAuG,SACAvG,KAAA+G,QAAA/G,KAAA6B,IACA7B,KAAAuF,SAAA,aAIAhE,IAAA,UACAkE,MAAA,WACAzF,KAAA8E,SAAAE,KAvMA,gBAuMA,MACAhF,KAAAuF,SAAA,gBAMAhE,IAAA,cACAkE,MAAA,SAAAvD,GACA5B,EAAAG,QAAAsE,QACA,EACApD,EACArB,EAAAG,QAAA2G,cAAAlF,IAAAA,OAOAwC,EAxNA","file":"jquery-dynamicNumber.min.js","sourcesContent":["/**\n* jQuery dynamicNumber v0.2.3\n* https://github.com/amazingSurge/jquery-dynamicNumber\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  from: 0,\n  to: 100,\n  duration: 1000,\n  decimals: 0,\n  format: function(n, options) {\n    return n.toFixed(options.decimals);\n  },\n  percentage: {\n    decimals: 0\n  },\n  currency: {\n    indicator: '$',\n    size: 3,\n    decimals: '2',\n    separator: ',',\n    decimalsPoint: '.'\n  },\n  group: {\n    size: 3,\n    decimals: '2',\n    separator: ',',\n    decimalsPoint: '.'\n  }\n};\n\nlet formaters = {\n  percentage(n, options) {\n    'use strict';\n    return `${n.toFixed(options.decimals)}%`;\n  },\n  currency(n, options) {\n    'use strict';\n    return options.indicator + formaters.group(n, options);\n  },\n  group(n, options) {\n    'use strict';\n    let decimals = options.decimals,\n      s = '';\n    if (decimals) {\n      let k = Math.pow(10, decimals);\n      s = String(Math.round(n * k) / k);\n    } else {\n      s = String(Math.round(n));\n    }\n    s = s.split('.');\n\n    if (s[0].length > 3) {\n      let reg = new RegExp(`\\\\B(?=(?:\\\\d{${options.size}})+(?!\\\\d))`, 'g');\n      s[0] = s[0].replace(reg, options.separator);\n    }\n    if ((s[1] || '').length < decimals) {\n      s[1] = s[1] || '';\n      s[1] += new Array(decimals - s[1].length + 1).join('0');\n    }\n    return s.join(options.decimalsPoint);\n  }\n};\n\nlet getTime = () => {\n  'use strict';\n  if (window.performance.now) {\n    return window.performance.now();\n  }\n  return Date.now();\n};\n\nif (!Date.now) {\n  Date.now = () => {\n    'use strict';\n    return new Date().getTime();\n  };\n}\n\nlet vendors = ['webkit', 'moz'];\n\nfor (let i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  let vp = vendors[i];\n  window.requestAnimationFrame = window[`${vp}RequestAnimationFrame`];\n  window.cancelAnimationFrame = (window[`${vp}CancelAnimationFrame`] || window[`${vp}CancelRequestAnimationFrame`]);\n}\n\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) // iOS6 is buggy\n  || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  let lastTime = 0;\n  window.requestAnimationFrame = callback => {\n    'use strict';\n\n    var now = Date.now();\n    var nextTime = Math.max(lastTime + 16, now);\n    return setTimeout(() => {\n        callback(lastTime = nextTime);\n      },\n      nextTime - now);\n  };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\nconst NAMESPACE$1 = 'dynamicNumber';\n\nclass dynamicNumber {\n  constructor(element, options = {}) {\n    this.element = element;\n    this.$element = $(element);\n\n    this.options = $.extend(true, {}, DEFAULTS, options, this.$element.data());\n    this.options.step = parseFloat(this.options.step, 10);\n\n    this.first = this.$element.attr('aria-valuenow');\n    this.first = this.first ? this.first : this.options.from;\n    this.first = parseFloat(this.first, 10);\n\n    this.now = this.first;\n    this.to = parseFloat(this.options.to, 10);\n\n    this._requestId = null;\n    this.initialized = false;\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    this.initialized = true;\n    this._trigger('ready');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n    //event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    //callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, word => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n\n    let onFunction = `on${eventType}`;\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  go(to) {\n    this._clear();\n\n    if (typeof to === 'undefined') {\n      to = this.to;\n    } else {\n      to = parseFloat(to, 10);\n    }\n\n    let start = this.now;\n    var startTime = getTime();\n\n    let animation = (time) => {\n      let distance = (time - startTime) / this.options.duration;\n      let next = Math.abs(distance * (start - to));\n\n      if (to > start) {\n        next = start + next;\n        if (next > to) {\n          next = to;\n        }\n      } else {\n        next = start - next;\n        if (next < to) {\n          next = to;\n        }\n      }\n\n      this._update(next);\n\n      if (next === to) {\n        window.cancelAnimationFrame(this._requestId);\n        this._requestId = null;\n        if (this.now === this.to) {\n          this._trigger('finish');\n        }\n      } else {\n        this._requestId = window.requestAnimationFrame(animation);\n      }\n    };\n\n    this._requestId = window.requestAnimationFrame(animation);\n  }\n\n  _update(n) {\n    this.now = n;\n\n    this.$element.attr('aria-valuenow', this.now);\n    let formated = n;\n\n    if (!isNaN(n)) {\n      if (typeof this.options.format === 'function') {\n        formated = this.options.format.apply(this, [n, this.options]);\n      } else if (typeof this.options.format === 'string') {\n        if (typeof formaters[this.options.format] !== 'undefined') {\n          formated = formaters[this.options.format].apply(this, [n, this.options[this.options.format]]);\n        } else if (typeof window[this.options.format] === 'function') {\n          formated = window[this.options.format].apply(this, [n, this.options]);\n        }\n      }\n    }\n\n    this.$element.html(formated);\n    this._trigger('update', n);\n  }\n\n  get() {\n    return this.now;\n  }\n\n  start() {\n    this._clear();\n    this._trigger('start');\n    this.go(this.to);\n  }\n\n  _clear() {\n    if (this._requestId) {\n      window.cancelAnimationFrame(this._requestId);\n      this._requestId = null;\n    }\n  }\n\n  reset() {\n    this._clear();\n    this._update(this.first);\n    this._trigger('reset');\n  }\n\n  stop() {\n    this._clear();\n    this._trigger('stop');\n  }\n\n  finish() {\n    this._clear();\n    this._update(this.to);\n    this._trigger('finish');\n  }\n\n  destroy() {\n    this.$element.data(NAMESPACE$1, null);\n    this._trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $.extend(true, DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.3'\n};\n\nconst NAMESPACE = 'dynamicNumber';\nconst OtherDynamicNumber = $.fn.dynamicNumber;\n\nconst jQueryDynamicNumber = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new dynamicNumber(this, options));\n    }\n  });\n};\n\n$.fn.dynamicNumber = jQueryDynamicNumber;\n\n$.dynamicNumber = $.extend({\n  setDefaults: dynamicNumber.setDefaults,\n  noConflict: function() {\n    $.fn.dynamicNumber = OtherDynamicNumber;\n    return jQueryDynamicNumber;\n  }\n}, info);\n"]}